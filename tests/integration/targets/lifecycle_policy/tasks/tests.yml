---
- vars:
    api_key: "{{ API_KEY }}"
    api_host: "{{ API_HOST }}"
    project_id: "{{ PROJECT_ID }}"
    region_id: "{{ REGION_ID }}"
    volume_name: "test_ansible_volume_for_lcp"
    policy_action: "volume_snapshot"
    policy_name: "test_ansible_policy"
    new_policy_name: "test_ansible_policy_2"

  block:
    - name: Create new policy
      gcore.cloud.lifecycle_policy:
        api_key: "{{ api_key }}"
        api_host: "{{ api_host }}"
        project_id: "{{ project_id }}"
        region_id: "{{ region_id }}"
        command: create
        name: "{{ policy_name }}"
        action: "{{ policy_action }}"
      register: created_policy

    - name: Verify policy
      ansible.builtin.assert:
        that:
          - created_policy.data["name"] == policy_name

    - name: Update policy
      gcore.cloud.lifecycle_policy:
        api_key: "{{ api_key }}"
        api_host: "{{ api_host }}"
        project_id: "{{ project_id }}"
        region_id: "{{ region_id }}"
        command: update
        lifecycle_policy_id: "{{ created_policy.data.id }}"
        name: "{{ new_policy_name }}"
      register: updated_policy

    - name: Get policy by id
      gcore.cloud.lifecycle_policy_info:
        api_key: "{{ api_key }}"
        api_host: "{{ api_host }}"
        project_id: "{{ project_id }}"
        region_id: "{{ region_id }}"
        lifecycle_policy_id: "{{ updated_policy.data.id }}"
      register: policy

    - name: Verify policy
      ansible.builtin.assert:
        that:
          - policy.data.name == new_policy_name
          - policy.data.action == policy_action

    - name: Add volume to policy
      gcore.cloud.lifecycle_policy:
        api_key: "{{ api_key }}"
        api_host: "{{ api_host }}"
        project_id: "{{ project_id }}"
        region_id: "{{ region_id }}"
        command: add_volumes
        lifecycle_policy_id: "{{ policy.data.id }}"
        volume_ids: ["{{ created_volume.data.id }}"]

    - name: Get policy with volumes
      gcore.cloud.lifecycle_policy_info:
        api_key: "{{ api_key }}"
        api_host: "{{ api_host }}"
        project_id: "{{ project_id }}"
        region_id: "{{ region_id }}"
        lifecycle_policy_id: "{{ policy.data.id }}"
        need_volumes: true
      register: policy_with_volumes

    - name: Validate policies volumes
      ansible.builtin.assert:
        that:
          - policy_with_volumes.data.volumes[0].volume_id == created_volume.data.id
          - policy_with_volumes.data.volumes[0].volume_name == created_volume.data.name

  always:
    - name: Cleanup policies
      import_tasks: cleanup.yml
    - name: Cleanup volumes
      import_tasks: cleanup_volumes.yml
