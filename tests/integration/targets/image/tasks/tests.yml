---
- vars:
    api_key: "{{ API_KEY }}"
    api_host: "{{ API_HOST }}"
    project_id: "{{ PROJECT_ID }}"
    region_id: "{{ REGION_ID }}"
    image_name: "test_ansible_image"
    new_image_name: "test_ansible_image_2"

  block:
    - name: Create new image from bootable volume
      gcore.cloud.image:
        api_key: "{{ api_key }}"
        api_host: "{{ api_host }}"
        project_id: "{{ project_id }}"
        region_id: "{{ region_id }}"
        command: create
        name: "{{ image_name }}"
        volume_id: "{{ bootable_volume.data.id }}"
        metadata: {'ansible_key': 'ansible_value'}
      register: created_image
    - name: Verify image
      ansible.builtin.assert:
        that:
          - created_image.data.name == "{{ image_name }}"
          - created_image.data.metadata.ansible_key == "ansible_value"
          - created_image.data.architecture == "x86_64"
          - created_image.data.os_distro == "ubuntu"

    - name: Update image's name
      gcore.cloud.image:
        api_key: "{{ api_key }}"
        api_host: "{{ api_host }}"
        project_id: "{{ project_id }}"
        region_id: "{{ region_id }}"
        command: update
        image_id: "{{ created_image.data.id }}"
        name: "{{ new_image_name }}"
      register: updated_image
    - name: Verify new image name
      ansible.builtin.assert:
        that:
          - updated_image.data.name == "{{ new_image_name }}"

  always:
    - name: Cleanup images
      import_tasks: ./targets/common/tasks/cleanup_images.yml
    - name: Cleanup volumes
      import_tasks: ./targets/common/tasks/cleanup_volumes.yml
