---
- vars:
    api_key: "{{ API_KEY }}"
    api_host: "{{ API_HOST }}"
    project_id: "{{ PROJECT_ID }}"
    region_id: "{{ REGION_ID }}"
    subnet_name: "test_ansible_subnet"
    new_subnet_name: "test_ansible_subnet_2"
    subnet_cidr: "192.168.14.0/29"
    dns_nameservers: ['8.8.8.8', '8.8.8.4']
    host_routes: [{'destination': '172.28.95.0/24', 'nexthop': '192.168.70.1'}]
    metadata: {'ansible_key': 'ansible_value'}

  block:
    - name: Create new subnet
      gcore.cloud.subnet:
        api_key: "{{ api_key }}"
        api_host: "{{ api_host }}"
        project_id: "{{ project_id }}"
        region_id: "{{ region_id }}"
        command: create
        name: "{{ subnet_name }}"
        network_id: "{{ created_network.data.id }}"
        cidr: "{{ subnet_cidr }}"
        connect_to_network_router: false
        metadata: "{{ metadata }}"
      register: created_subnet
    - name: Verify subnet
      ansible.builtin.assert:
        that:
          - created_subnet.data.name == subnet_name
          - created_subnet.data.has_router == false
          - created_subnet.data.dns_nameservers == ['8.8.8.8', '8.8.4.4']
          - created_subnet.data.cidr == subnet_cidr
          - created_subnet.data.network_id == created_network.data.id
          - created_subnet.data.metadata[0].key == "ansible_key"

    - name: Update existing subnet
      gcore.cloud.subnet:
        api_key: "{{ api_key }}"
        api_host: "{{ api_host }}"
        project_id: "{{ project_id }}"
        region_id: "{{ region_id }}"
        command: update
        subnet_id: "{{ created_subnet.data.id }}"
        name: "{{ new_subnet_name }}"
        dns_nameservers: "{{ dns_nameservers }}"
        enable_dhcp: false
      register: updated_subnet
    - name: Verify updated subnet
      ansible.builtin.assert:
        that:
          - updated_subnet.data.name == new_subnet_name
          - updated_subnet.data.dns_nameservers == dns_nameservers
          - updated_subnet.data.enable_dhcp == false
          - updated_subnet.data.host_routes | list | length == 0

    - name: Update routes for subnet
      gcore.cloud.subnet:
        api_key: "{{ api_key }}"
        api_host: "{{ api_host }}"
        project_id: "{{ project_id }}"
        region_id: "{{ region_id }}"
        command: update
        host_routes: "{{ host_routes }}"
        subnet_id: "{{ updated_subnet.data.id }}"
      register: subnet_with_routes
    - name: Verify subnet routes
      ansible.builtin.assert:
        that:
          - subnet_with_routes.data.host_routes | list | length == 1
