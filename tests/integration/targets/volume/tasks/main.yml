---
- vars:
    api_key: "{{ API_KEY }}"
    api_host: "{{ API_HOST }}"
    project_id: "{{ PROJECT_ID }}"
    region_id: "{{ REGION_ID }}"
    volume_source: "new-volume"
    volume_name: "test-volume"
    updated_volume_name: "updated-volume-name"

  block:
    - name: List volumes before creation
      gcore.cloud.volume_info:
        api_key: "{{ api_key }}"
        api_host: "{{ api_host }}"
        project_id: "{{ project_id }}"
        region_id: "{{ region_id }}"
      register: list_result_before

    - name: Create new volume
      gcore.cloud.volume:
        api_key: "{{ api_key }}"
        api_host: "{{ api_host }}"
        project_id: "{{ project_id }}"
        region_id: "{{ region_id }}"
        command: create
        source: "{{ volume_source }}"
        name: "{{ volume_name }}"
        size: 1
      register: create_result

    - name: Verify task
      ansible.builtin.assert:
        that:
          - create_result.data["tasks"] | list | length == 1
    
    - name: Wait for volume
      ansible.builtin.pause:
        minutes: 1

    - name: List volumes after creation
      gcore.cloud.volume_info:
        api_key: "{{ api_key }}"
        api_host: "{{ api_host }}"
        project_id: "{{ project_id }}"
        region_id: "{{ region_id }}"
      register: list_result_after

    - name: Check volume list length
      ansible.builtin.assert:
        that:
          - list_result_after.data | length == list_result_before.data | length + 1

    - name: Find volume by name
      gcore.cloud.volume_info:
        api_key: "{{ api_key }}"
        api_host: "{{ api_host }}"
        project_id: "{{ project_id }}"
        region_id: "{{ region_id }}"
        name_part: "{{ volume_name }}"
      register: find_result

    - name: Update existing volume's name
      gcore.cloud.volume:
        api_key: "{{ api_key }}"
        api_host: "{{ api_host }}"
        project_id: "{{ project_id }}"
        region_id: "{{ region_id }}"
        command: update
        volume_id: "{{ find_result.data[0]['id'] }}"
        name: "{{ updated_volume_name }}"

    - name: Find volume by id
      gcore.cloud.volume_info:
        api_key: "{{ api_key }}"
        api_host: "{{ api_host }}"
        project_id: "{{ project_id }}"
        region_id: "{{ region_id }}"
        volume_id: "{{ find_result.data[0]['id'] }}"
      register: find_result

    - name: Verify name updated
      ansible.builtin.assert:
        that:
          - find_result.data['name'] == "{{ updated_volume_name }}"

    - name: Extend existing volume
      gcore.cloud.volume:
        api_key: "{{ api_key }}"
        api_host: "{{ api_host }}"
        project_id: "{{ project_id }}"
        region_id: "{{ region_id }}"
        command: extend
        volume_id: "{{ find_result.data['id'] }}"
        size: 2
      register: extend_volume_result

    - name: Verify task
      ansible.builtin.assert:
        that:
          - extend_volume_result.data["tasks"] | list | length == 1

    - name: Wait for volume extension
      ansible.builtin.pause:
        minutes: 1

    - name: Find volume by id
      gcore.cloud.volume_info:
        api_key: "{{ api_key }}"
        api_host: "{{ api_host }}"
        project_id: "{{ project_id }}"
        region_id: "{{ region_id }}"
        volume_id: "{{ find_result.data['id'] }}"
      register: find_result

    - name: Verify volume has been extended
      ansible.builtin.assert:
        that:
          - find_result.data["size"] == 2

  always:
    - name: Delete test volume
      gcore.cloud.volume:
        api_key: "{{ api_key }}"
        api_host: "{{ api_host }}"
        project_id: "{{ project_id }}"
        region_id: "{{ region_id }}"
        command: delete
        volume_id: "{{ find_result.data['id'] }}"
      register: delete_result

    - name: Verify delete task
      ansible.builtin.assert:
        that:
          - delete_result.data["tasks"] | list | length == 1
